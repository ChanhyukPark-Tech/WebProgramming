/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef, useState} from 'react'
import { useGLTF} from '@react-three/drei'
import {useFrame} from "@react-three/fiber";
import {postBoxClick} from "../signButtonEventHandler";
import HoverHtml from "./HoverHtml";
import postBox from '../images/hoverImage/postBox.png'
import {hover, unhover} from "./hoverFunction";
export default function Model(props) {
    const {nodes, materials} = useGLTF(`/PostBox.glb`)
    const [hovered, setHover] = useState(false)

    const group = useRef()
    const time = useRef(0);
    const rotationX = Math.PI / 4
    useFrame(() => {
        time.current += 0.03;
        group.current.rotation.x = rotationX + Math.sin(time.current) * 0.07
        // group.current.position.y = positionY + Math.sin(time.current) * 0.07
    })

    useEffect(() => void (document.body.style.cursor = hovered ? 'pointer' : 'auto'), [hovered])

    return (
        <group ref={group} {...props} dispose={null} position={[8, 7, -1589]}
               onClick={(e) => postBoxClick(e)}

               rotation={[Math.PI / 7, -Math.PI / 6, Math.PI / 7]}>
            <mesh geometry={nodes.Cube001.geometry} material={materials['Material.001']}
                  onPointerOver={e => hover(e,setHover)}
                  onPointerOut={e => unhover(e,setHover)}/>/>
            <mesh
                geometry={nodes.Text.geometry}
                material={materials.PostEimission}
                position={[-0.79, -0.02, 1.34]}
                rotation={[Math.PI / 2, 0, 0]}
                scale={0.58}
            />
            <mesh
                geometry={nodes.Text001.geometry}
                material={materials.WooPyunEmission}
                position={[-0.74, 2.43, 1.18]}
                rotation={[1.03, 0, 0]}
                scale={0.68}
            />
            {hovered ? <HoverHtml  image={postBox}/> : null}
        </group>
    )
}

useGLTF.preload('/PostBox.glb')
